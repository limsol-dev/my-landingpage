-- =============================================
-- üè† Îã¨ÌåΩÏù¥ ÏïÑÏßÄÌä∏ ÌéúÏÖò - Í∞ÑÎã®ÌïòÍ≥† ÏïàÏ†ÑÌïú ÎûúÎî©ÌéòÏù¥ÏßÄ DDL
-- =============================================
-- üìù SupabaseÏóêÏÑú ÏïàÏ†ÑÌïòÍ≤å Ïã§ÌñâÎêòÎäî Î≤ÑÏ†Ñ
-- üìÖ ÏûëÏÑ±Ïùº: 2024ÎÖÑ 1Ïõî
-- ‚ö†Ô∏è  RLS, Î≥µÏû°Ìïú Ìä∏Î¶¨Í±∞, Í∂åÌïú Î¨∏Ï†ú Îì±ÏùÑ Ï†úÍ±∞Ìïú Ïã§Ïö©Ï†Å Î≤ÑÏ†Ñ

-- =============================================
-- 1. Í∏∞Î≥∏ ÌôïÏû• (Supabase Í∏∞Î≥∏ Ï†úÍ≥µÎßå)
-- =============================================

CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

-- =============================================
-- 2. ÌïµÏã¨ ÌÖåÏù¥Î∏î ÏÉùÏÑ±
-- =============================================

-- 2.1 ÌîÑÎ°úÍ∑∏Îû® Ïπ¥ÌÖåÍ≥†Î¶¨
CREATE TABLE IF NOT EXISTS program_categories (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  category_code TEXT UNIQUE NOT NULL,
  category_name TEXT NOT NULL,
  description TEXT,
  display_order INTEGER NOT NULL DEFAULT 0,
  is_active BOOLEAN NOT NULL DEFAULT true,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 2.2 Í≥µÍ∞Ñ/Í∞ùÏã§ Ï†ïÎ≥¥
CREATE TABLE IF NOT EXISTS spaces (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  space_code TEXT UNIQUE NOT NULL,
  space_name TEXT NOT NULL,
  space_type TEXT NOT NULL,
  subtitle TEXT,
  description TEXT,
  capacity_min INTEGER NOT NULL DEFAULT 1,
  capacity_max INTEGER NOT NULL DEFAULT 4,
  base_price INTEGER NOT NULL DEFAULT 0,
  image_url TEXT,
  amenities JSONB DEFAULT '[]'::jsonb,
  is_available BOOLEAN NOT NULL DEFAULT true,
  display_order INTEGER NOT NULL DEFAULT 0,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 2.3 ÌîÑÎ°úÍ∑∏Îû® ÌÖåÏù¥Î∏î
CREATE TABLE IF NOT EXISTS programs (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  program_code TEXT UNIQUE NOT NULL,
  category_id UUID REFERENCES program_categories(id) ON DELETE SET NULL,
  title TEXT NOT NULL,
  subtitle TEXT,
  description TEXT NOT NULL,
  duration TEXT NOT NULL,
  duration_hours INTEGER,
  price INTEGER NOT NULL,
  discount_price INTEGER DEFAULT 0,
  min_participants INTEGER NOT NULL DEFAULT 1,
  max_participants INTEGER DEFAULT 20,
  image_url TEXT,
  tags JSONB DEFAULT '[]'::jsonb,
  is_recommended BOOLEAN NOT NULL DEFAULT false,
  is_active BOOLEAN NOT NULL DEFAULT true,
  availability_status TEXT DEFAULT 'available',
  
  -- ÌîÑÎ°úÍ∑∏Îû® ÏÉÅÏÑ∏ Ï†ïÎ≥¥
  schedule JSONB DEFAULT '[]'::jsonb,
  includes JSONB DEFAULT '[]'::jsonb,
  excludes JSONB DEFAULT '[]'::jsonb,
  notices JSONB DEFAULT '[]'::jsonb,
  requirements JSONB DEFAULT '[]'::jsonb,
  
  display_order INTEGER NOT NULL DEFAULT 0,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 2.4 Î∂ÄÍ∞Ä ÏÑúÎπÑÏä§
CREATE TABLE IF NOT EXISTS additional_services (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  service_code TEXT UNIQUE NOT NULL,
  service_name TEXT NOT NULL,
  service_category TEXT NOT NULL,
  description TEXT,
  unit_name TEXT NOT NULL DEFAULT 'Í∞ú',
  unit_price INTEGER NOT NULL,
  min_quantity INTEGER NOT NULL DEFAULT 0,
  max_quantity INTEGER DEFAULT 999,
  is_required BOOLEAN NOT NULL DEFAULT false,
  
  -- Í∞ÄÍ≤© Ï†ïÎ≥¥
  price_per_person INTEGER DEFAULT 0,
  price_per_set INTEGER DEFAULT 0,
  set_size INTEGER DEFAULT 1,
  
  is_available BOOLEAN NOT NULL DEFAULT true,
  display_order INTEGER NOT NULL DEFAULT 0,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 2.5 Í≥†Í∞ù Ï†ïÎ≥¥
CREATE TABLE IF NOT EXISTS customers (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  
  -- Í∏∞Î≥∏ Ï†ïÎ≥¥
  customer_name TEXT NOT NULL,
  customer_phone TEXT NOT NULL,
  customer_email TEXT,
  
  -- Ï∂îÍ∞Ä Ï†ïÎ≥¥
  birth_date DATE,
  gender TEXT,
  address_full TEXT,
  
  -- ÏÑ†Ìò∏ÎèÑ
  preferred_contact_method TEXT DEFAULT 'phone',
  allergies TEXT,
  special_needs TEXT,
  memo TEXT,
  
  -- ÎßàÏºÄÌåÖ Ï†ïÎ≥¥
  referral_source TEXT,
  utm_source TEXT,
  utm_medium TEXT,
  utm_campaign TEXT,
  
  -- ÌÜµÍ≥Ñ Ï†ïÎ≥¥
  total_reservations INTEGER NOT NULL DEFAULT 0,
  total_spent INTEGER NOT NULL DEFAULT 0,
  last_visit_date TIMESTAMP WITH TIME ZONE,
  customer_grade TEXT DEFAULT 'bronze',
  
  -- Í∞úÏù∏Ï†ïÎ≥¥ Î≥¥Ìò∏
  privacy_consent BOOLEAN NOT NULL DEFAULT false,
  marketing_consent BOOLEAN NOT NULL DEFAULT false,
  
  is_active BOOLEAN NOT NULL DEFAULT true,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 2.6 ÏòàÏïΩ Î©îÏù∏ ÌÖåÏù¥Î∏î
CREATE TABLE IF NOT EXISTS reservations (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  
  -- ÏòàÏïΩ Î≤àÌò∏
  reservation_number TEXT UNIQUE NOT NULL,
  
  -- Í≥†Í∞ù Ï†ïÎ≥¥
  customer_id UUID REFERENCES customers(id) ON DELETE SET NULL,
  customer_name TEXT NOT NULL,
  customer_phone TEXT NOT NULL,
  customer_email TEXT,
  
  -- ÏòàÏïΩ Í∏∞Í∞Ñ
  check_in_date DATE NOT NULL,
  check_out_date DATE NOT NULL,
  nights INTEGER,
  
  -- Ïù∏Ïõê Ï†ïÎ≥¥
  adults INTEGER NOT NULL DEFAULT 2,
  children INTEGER NOT NULL DEFAULT 0,
  infants INTEGER NOT NULL DEFAULT 0,
  total_guests INTEGER,
  
  -- ÌîÑÎ°úÍ∑∏Îû® Ï†ïÎ≥¥
  program_id UUID REFERENCES programs(id) ON DELETE SET NULL,
  program_name TEXT,
  program_price INTEGER NOT NULL DEFAULT 0,
  
  -- Í≥µÍ∞Ñ Ï†ïÎ≥¥
  primary_space_id UUID REFERENCES spaces(id) ON DELETE SET NULL,
  selected_spaces JSONB DEFAULT '[]'::jsonb,
  
  -- ÏÉÅÌÉú
  status TEXT NOT NULL DEFAULT 'pending',
  payment_status TEXT NOT NULL DEFAULT 'pending',
  
  -- ÏöîÏ≤≠ÏÇ¨Ìï≠
  special_requests TEXT,
  internal_memo TEXT,
  
  -- ÏòàÏïΩ Í≤ΩÎ°ú
  booking_source TEXT NOT NULL DEFAULT 'landing_page',
  referrer_url TEXT,
  
  -- Í∞ÄÍ≤© Ï†ïÎ≥¥
  base_price INTEGER NOT NULL DEFAULT 0,
  service_price INTEGER NOT NULL DEFAULT 0,
  discount_amount INTEGER NOT NULL DEFAULT 0,
  total_price INTEGER NOT NULL DEFAULT 0,
  
  -- ÌôïÏù∏ Ï†ïÎ≥¥
  confirmed_at TIMESTAMP WITH TIME ZONE,
  confirmed_by TEXT,
  
  -- Ïã§Ï†ú Ï≤¥ÌÅ¨Ïù∏/ÏïÑÏõÉ
  actual_check_in TIMESTAMP WITH TIME ZONE,
  actual_check_out TIMESTAMP WITH TIME ZONE,
  
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 2.7 ÏòàÏïΩ-ÏÑúÎπÑÏä§ Ïó∞Í≤∞
CREATE TABLE IF NOT EXISTS reservation_services (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  reservation_id UUID NOT NULL REFERENCES reservations(id) ON DELETE CASCADE,
  service_id UUID NOT NULL REFERENCES additional_services(id) ON DELETE RESTRICT,
  
  -- ÏàòÎüâ Î∞è Í∞ÄÍ≤©
  quantity INTEGER NOT NULL DEFAULT 1,
  unit_price INTEGER NOT NULL,
  total_price INTEGER NOT NULL,
  
  -- ÏÑúÎπÑÏä§ Ï†ïÎ≥¥
  service_date DATE,
  service_time TIME,
  special_instructions TEXT,
  
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 2.8 Í≤∞Ï†ú Ï†ïÎ≥¥
CREATE TABLE IF NOT EXISTS payments (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  reservation_id UUID NOT NULL REFERENCES reservations(id) ON DELETE CASCADE,
  
  -- Í≤∞Ï†ú Í∏∞Î≥∏ Ï†ïÎ≥¥
  payment_number TEXT UNIQUE NOT NULL,
  payment_method TEXT NOT NULL,
  payment_gateway TEXT,
  
  -- Í∏àÏï°
  amount INTEGER NOT NULL,
  currency TEXT NOT NULL DEFAULT 'KRW',
  
  -- ÏÉÅÌÉú
  status TEXT NOT NULL DEFAULT 'pending',
  
  -- Ïô∏Î∂Ä Í≤∞Ï†ú Ï†ïÎ≥¥
  external_payment_id TEXT,
  external_transaction_id TEXT,
  
  -- Ïπ¥Îìú Ï†ïÎ≥¥
  card_company TEXT,
  card_number_masked TEXT,
  installment_months INTEGER DEFAULT 0,
  
  -- ÏãúÍ∞Ñ Ï†ïÎ≥¥
  paid_at TIMESTAMP WITH TIME ZONE,
  refunded_at TIMESTAMP WITH TIME ZONE,
  refund_amount INTEGER DEFAULT 0,
  refund_reason TEXT,
  
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 2.9 Ïø†Ìè∞
CREATE TABLE IF NOT EXISTS coupons (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  
  -- Ïø†Ìè∞ Ï†ïÎ≥¥
  coupon_code TEXT UNIQUE NOT NULL,
  coupon_name TEXT NOT NULL,
  description TEXT,
  
  -- Ìï†Ïù∏ Ï†ïÎ≥¥
  discount_type TEXT NOT NULL, -- 'fixed' ÎòêÎäî 'percentage'
  discount_value INTEGER NOT NULL,
  max_discount_amount INTEGER,
  min_order_amount INTEGER DEFAULT 0,
  
  -- ÏÇ¨Ïö© Ï°∞Í±¥
  usage_limit INTEGER,
  per_user_limit INTEGER DEFAULT 1,
  usage_count INTEGER NOT NULL DEFAULT 0,
  
  -- Í∏∞Í∞Ñ
  valid_from TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
  valid_until TIMESTAMP WITH TIME ZONE NOT NULL,
  
  -- Ï†ÅÏö© Ï°∞Í±¥
  applicable_programs JSONB DEFAULT '[]'::jsonb,
  applicable_categories JSONB DEFAULT '[]'::jsonb,
  
  is_active BOOLEAN NOT NULL DEFAULT true,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 2.10 Ïø†Ìè∞ ÏÇ¨Ïö© Ïù¥Î†•
CREATE TABLE IF NOT EXISTS coupon_usages (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  coupon_id UUID NOT NULL REFERENCES coupons(id) ON DELETE CASCADE,
  reservation_id UUID NOT NULL REFERENCES reservations(id) ON DELETE CASCADE,
  customer_id UUID NOT NULL REFERENCES customers(id) ON DELETE CASCADE,
  
  -- Ìï†Ïù∏ Ï†ïÎ≥¥
  discount_amount INTEGER NOT NULL,
  original_amount INTEGER NOT NULL,
  final_amount INTEGER NOT NULL,
  
  used_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 2.11 Í≥†Í∞ù ÌõÑÍ∏∞
CREATE TABLE IF NOT EXISTS reviews (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  reservation_id UUID REFERENCES reservations(id) ON DELETE SET NULL,
  customer_id UUID REFERENCES customers(id) ON DELETE SET NULL,
  program_id UUID REFERENCES programs(id) ON DELETE SET NULL,
  
  -- ÌõÑÍ∏∞ ÎÇ¥Ïö©
  title TEXT,
  content TEXT NOT NULL,
  rating INTEGER NOT NULL,
  
  -- ÏÑ∏Î∂Ä ÌèâÏ†ê
  cleanliness_rating INTEGER,
  service_rating INTEGER,
  location_rating INTEGER,
  value_rating INTEGER,
  
  -- Ï∂îÏ≤ú Ïó¨Î∂Ä
  would_recommend BOOLEAN,
  
  -- Ïù¥ÎØ∏ÏßÄ
  images JSONB DEFAULT '[]'::jsonb,
  
  -- Í¥ÄÎ¶¨Ïûê ÏùëÎãµ
  admin_reply TEXT,
  admin_reply_at TIMESTAMP WITH TIME ZONE,
  
  -- ÏÉÅÌÉú
  is_approved BOOLEAN NOT NULL DEFAULT false,
  is_featured BOOLEAN NOT NULL DEFAULT false,
  is_public BOOLEAN NOT NULL DEFAULT true,
  
  -- ÎèÑÏõÄ Ï†ïÎ≥¥
  helpful_count INTEGER NOT NULL DEFAULT 0,
  not_helpful_count INTEGER NOT NULL DEFAULT 0,
  
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 2.12 FAQ
CREATE TABLE IF NOT EXISTS faqs (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  
  -- FAQ ÎÇ¥Ïö©
  category TEXT NOT NULL,
  question TEXT NOT NULL,
  answer TEXT NOT NULL,
  
  -- ÌÇ§ÏõåÎìú
  keywords JSONB DEFAULT '[]'::jsonb,
  
  -- ÌëúÏãú ÏÑ§Ï†ï
  is_featured BOOLEAN NOT NULL DEFAULT false,
  display_order INTEGER NOT NULL DEFAULT 0,
  is_active BOOLEAN NOT NULL DEFAULT true,
  
  -- ÌÜµÍ≥Ñ
  view_count INTEGER NOT NULL DEFAULT 0,
  helpful_count INTEGER NOT NULL DEFAULT 0,
  
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 2.13 Ïä§ÌÜ†Î¶¨/Î∏îÎ°úÍ∑∏
CREATE TABLE IF NOT EXISTS stories (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  
  -- Ïä§ÌÜ†Î¶¨ Ï†ïÎ≥¥
  title TEXT NOT NULL,
  subtitle TEXT,
  content TEXT NOT NULL,
  excerpt TEXT,
  
  -- Î∂ÑÎ•ò
  category TEXT NOT NULL,
  tags JSONB DEFAULT '[]'::jsonb,
  
  -- Ïù¥ÎØ∏ÏßÄ
  featured_image TEXT,
  gallery_images JSONB DEFAULT '[]'::jsonb,
  
  -- SEO
  slug TEXT UNIQUE,
  seo_title TEXT,
  seo_description TEXT,
  
  -- Í¥ÄÎ†® Ï†ïÎ≥¥
  related_program_id UUID REFERENCES programs(id) ON DELETE SET NULL,
  author_name TEXT DEFAULT 'Îã¨ÌåΩÏù¥ ÏïÑÏßÄÌä∏',
  
  -- ÏÉÅÌÉú
  status TEXT NOT NULL DEFAULT 'draft',
  is_featured BOOLEAN NOT NULL DEFAULT false,
  
  -- ÌÜµÍ≥Ñ
  view_count INTEGER NOT NULL DEFAULT 0,
  like_count INTEGER NOT NULL DEFAULT 0,
  
  -- ÏãúÍ∞Ñ
  published_at TIMESTAMP WITH TIME ZONE,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 2.14 ÏïåÎ¶º ÌÖúÌîåÎ¶ø
CREATE TABLE IF NOT EXISTS notification_templates (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  
  -- ÌÖúÌîåÎ¶ø Ï†ïÎ≥¥
  template_code TEXT UNIQUE NOT NULL,
  template_name TEXT NOT NULL,
  description TEXT,
  
  -- Î∞úÏÜ° Ï±ÑÎÑê
  channel TEXT NOT NULL,
  
  -- Î©îÏãúÏßÄ ÎÇ¥Ïö©
  subject TEXT,
  message_template TEXT NOT NULL,
  
  -- Î∞úÏÜ° Ï°∞Í±¥
  trigger_event TEXT NOT NULL,
  send_delay_minutes INTEGER DEFAULT 0,
  
  -- ÏÑ§Ï†ï
  is_active BOOLEAN NOT NULL DEFAULT true,
  is_required BOOLEAN NOT NULL DEFAULT false,
  
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 2.15 ÏïåÎ¶º Î∞úÏÜ° Ïù¥Î†•
CREATE TABLE IF NOT EXISTS notifications (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  
  -- ÏàòÏã†Ïûê
  customer_id UUID REFERENCES customers(id) ON DELETE SET NULL,
  recipient_phone TEXT,
  recipient_email TEXT,
  
  -- ÏïåÎ¶º Ï†ïÎ≥¥
  template_id UUID REFERENCES notification_templates(id) ON DELETE SET NULL,
  channel TEXT NOT NULL,
  subject TEXT,
  message TEXT NOT NULL,
  
  -- Í¥ÄÎ†® Ï†ïÎ≥¥
  reservation_id UUID REFERENCES reservations(id) ON DELETE SET NULL,
  related_entity_type TEXT,
  related_entity_id UUID,
  
  -- Î∞úÏÜ° ÏÉÅÌÉú
  status TEXT NOT NULL DEFAULT 'pending',
  sent_at TIMESTAMP WITH TIME ZONE,
  delivered_at TIMESTAMP WITH TIME ZONE,
  read_at TIMESTAMP WITH TIME ZONE,
  
  -- Ïô∏Î∂Ä ÏÑúÎπÑÏä§
  external_message_id TEXT,
  failure_reason TEXT,
  
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 2.16 Í≥†Í∞ù ÌôúÎèô Î°úÍ∑∏
CREATE TABLE IF NOT EXISTS customer_activities (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  
  -- ÏÑ∏ÏÖò Ï†ïÎ≥¥
  session_id TEXT,
  customer_id UUID REFERENCES customers(id) ON DELETE SET NULL,
  
  -- ÌôúÎèô Ï†ïÎ≥¥
  activity_type TEXT NOT NULL,
  page_url TEXT,
  element_id TEXT,
  
  -- ÏÉÅÏÑ∏ Îç∞Ïù¥ÌÑ∞
  activity_data JSONB DEFAULT '{}'::jsonb,
  
  -- Í∏∞Ïà† Ï†ïÎ≥¥
  user_agent TEXT,
  ip_address INET,
  referer_url TEXT,
  
  -- UTM Ï†ïÎ≥¥
  utm_source TEXT,
  utm_medium TEXT,
  utm_campaign TEXT,
  utm_term TEXT,
  utm_content TEXT,
  
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 2.17 ÏãúÏä§ÌÖú Î°úÍ∑∏
CREATE TABLE IF NOT EXISTS system_logs (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  
  -- Î°úÍ∑∏ Ï†ïÎ≥¥
  log_level TEXT NOT NULL,
  log_category TEXT NOT NULL,
  message TEXT NOT NULL,
  
  -- Í¥ÄÎ†® Ï†ïÎ≥¥
  user_id UUID,
  customer_id UUID REFERENCES customers(id) ON DELETE SET NULL,
  reservation_id UUID REFERENCES reservations(id) ON DELETE SET NULL,
  
  -- Í∏∞Ïà† Ï†ïÎ≥¥
  request_id TEXT,
  ip_address INET,
  user_agent TEXT,
  
  -- ÏÉÅÏÑ∏ Îç∞Ïù¥ÌÑ∞
  metadata JSONB DEFAULT '{}'::jsonb,
  error_stack TEXT,
  
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 2.18 ÏÇ¨Ïù¥Ìä∏ ÏÑ§Ï†ï
CREATE TABLE IF NOT EXISTS site_settings (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  
  -- ÏÑ§Ï†ï Ï†ïÎ≥¥
  setting_key TEXT UNIQUE NOT NULL,
  setting_value TEXT,
  setting_type TEXT NOT NULL,
  
  -- ÏÑ§Î™Ö
  display_name TEXT,
  description TEXT,
  category TEXT,
  
  -- Ï†úÏïΩÏÇ¨Ìï≠
  is_required BOOLEAN NOT NULL DEFAULT false,
  validation_rules JSONB DEFAULT '{}'::jsonb,
  
  updated_by TEXT,
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 2.19 Í¥ÄÎ¶¨Ïûê Í≥ÑÏ†ï
CREATE TABLE IF NOT EXISTS admin_users (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  
  -- Í≥ÑÏ†ï Ï†ïÎ≥¥
  username TEXT UNIQUE NOT NULL,
  email TEXT UNIQUE NOT NULL,
  password_hash TEXT NOT NULL,
  
  -- Í∞úÏù∏ Ï†ïÎ≥¥
  full_name TEXT NOT NULL,
  phone TEXT,
  
  -- Í∂åÌïú
  role TEXT NOT NULL DEFAULT 'staff',
  permissions JSONB DEFAULT '[]'::jsonb,
  
  -- ÏÉÅÌÉú
  is_active BOOLEAN NOT NULL DEFAULT true,
  last_login_at TIMESTAMP WITH TIME ZONE,
  password_changed_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- =============================================
-- 3. Í∏∞Î≥∏ Ïù∏Îç±Ïä§ ÏÉùÏÑ±
-- =============================================

-- ÏòàÏïΩ Í¥ÄÎ†® Ïù∏Îç±Ïä§
CREATE INDEX IF NOT EXISTS idx_reservations_dates ON reservations(check_in_date, check_out_date);
CREATE INDEX IF NOT EXISTS idx_reservations_status ON reservations(status);
CREATE INDEX IF NOT EXISTS idx_reservations_customer ON reservations(customer_id);
CREATE INDEX IF NOT EXISTS idx_reservations_program ON reservations(program_id);

-- Í≥†Í∞ù Í¥ÄÎ†® Ïù∏Îç±Ïä§
CREATE INDEX IF NOT EXISTS idx_customers_phone ON customers(customer_phone);
CREATE INDEX IF NOT EXISTS idx_customers_email ON customers(customer_email);

-- ÌîÑÎ°úÍ∑∏Îû® Í¥ÄÎ†® Ïù∏Îç±Ïä§
CREATE INDEX IF NOT EXISTS idx_programs_category ON programs(category_id);
CREATE INDEX IF NOT EXISTS idx_programs_active ON programs(is_active);

-- ÌõÑÍ∏∞ Í¥ÄÎ†® Ïù∏Îç±Ïä§
CREATE INDEX IF NOT EXISTS idx_reviews_program ON reviews(program_id);
CREATE INDEX IF NOT EXISTS idx_reviews_approved ON reviews(is_approved);

-- Í≤∞Ï†ú Í¥ÄÎ†® Ïù∏Îç±Ïä§
CREATE INDEX IF NOT EXISTS idx_payments_reservation ON payments(reservation_id);
CREATE INDEX IF NOT EXISTS idx_payments_status ON payments(status);

-- =============================================
-- 4. Í∞ÑÎã®Ìïú Ìä∏Î¶¨Í±∞ Ìï®Ïàò
-- =============================================

-- ÏóÖÎç∞Ïù¥Ìä∏ ÏãúÍ∞Ñ ÏûêÎèô Í∞±Ïã†
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$ language 'plpgsql';

-- ÏòàÏïΩ Î≤àÌò∏ ÏûêÎèô ÏÉùÏÑ±
CREATE OR REPLACE FUNCTION generate_reservation_number()
RETURNS TRIGGER AS $$
BEGIN
    IF NEW.reservation_number IS NULL OR NEW.reservation_number = '' THEN
        NEW.reservation_number := 'RES-' || TO_CHAR(NOW(), 'YYYY') || '-' || TO_CHAR(NOW(), 'DDD') || '-' || LPAD(FLOOR(RANDOM() * 10000)::TEXT, 4, '0');
    END IF;
    RETURN NEW;
END;
$$ language 'plpgsql';

-- Í≤∞Ï†ú Î≤àÌò∏ ÏûêÎèô ÏÉùÏÑ±
CREATE OR REPLACE FUNCTION generate_payment_number()
RETURNS TRIGGER AS $$
BEGIN
    IF NEW.payment_number IS NULL OR NEW.payment_number = '' THEN
        NEW.payment_number := 'PAY-' || TO_CHAR(NOW(), 'YYYYMMDD') || '-' || LPAD(FLOOR(RANDOM() * 100000)::TEXT, 5, '0');
    END IF;
    RETURN NEW;
END;
$$ language 'plpgsql';

-- Í≥ÑÏÇ∞ ÌïÑÎìú ÏûêÎèô ÏóÖÎç∞Ïù¥Ìä∏
CREATE OR REPLACE FUNCTION update_calculated_fields()
RETURNS TRIGGER AS $$
BEGIN
    -- ÏòàÏïΩ ÏùºÏàò Í≥ÑÏÇ∞
    IF NEW.check_out_date IS NOT NULL AND NEW.check_in_date IS NOT NULL THEN
        NEW.nights := NEW.check_out_date - NEW.check_in_date;
    END IF;
    
    -- Ï¥ù Ïù∏Ïõê Í≥ÑÏÇ∞
    NEW.total_guests := COALESCE(NEW.adults, 0) + COALESCE(NEW.children, 0) + COALESCE(NEW.infants, 0);
    
    RETURN NEW;
END;
$$ language 'plpgsql';

-- =============================================
-- 5. Ìä∏Î¶¨Í±∞ Ï†ÅÏö©
-- =============================================

-- ÏóÖÎç∞Ïù¥Ìä∏ ÏãúÍ∞Ñ Ìä∏Î¶¨Í±∞
CREATE TRIGGER update_customers_updated_at BEFORE UPDATE ON customers FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();
CREATE TRIGGER update_reservations_updated_at BEFORE UPDATE ON reservations FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();
CREATE TRIGGER update_programs_updated_at BEFORE UPDATE ON programs FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();
CREATE TRIGGER update_payments_updated_at BEFORE UPDATE ON payments FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

-- ÏòàÏïΩ Î≤àÌò∏ ÏÉùÏÑ± Ìä∏Î¶¨Í±∞
CREATE TRIGGER generate_reservation_number_trigger BEFORE INSERT ON reservations FOR EACH ROW EXECUTE FUNCTION generate_reservation_number();

-- Í≤∞Ï†ú Î≤àÌò∏ ÏÉùÏÑ± Ìä∏Î¶¨Í±∞
CREATE TRIGGER generate_payment_number_trigger BEFORE INSERT ON payments FOR EACH ROW EXECUTE FUNCTION generate_payment_number();

-- Í≥ÑÏÇ∞ ÌïÑÎìú Ìä∏Î¶¨Í±∞
CREATE TRIGGER update_reservation_calculated_fields BEFORE INSERT OR UPDATE ON reservations FOR EACH ROW EXECUTE FUNCTION update_calculated_fields();

-- =============================================
-- 6. Í∏∞Î≥∏ Îç∞Ïù¥ÌÑ∞ ÏÇΩÏûÖ
-- =============================================

-- ÌîÑÎ°úÍ∑∏Îû® Ïπ¥ÌÖåÍ≥†Î¶¨
INSERT INTO program_categories (category_code, category_name, description, display_order) VALUES
('pension', 'ÌéúÏÖò', 'Ìé∏ÏïàÌïú ÏàôÎ∞ïÏùÑ ÏúÑÌïú ÌéúÏÖò ÌîÑÎ°úÍ∑∏Îû®', 1),
('healing', 'ÌûêÎßÅ', 'ÎßàÏùåÍ≥º Î™∏Ïùò ÏπòÏú†Î•º ÏúÑÌïú ÌûêÎßÅ ÌîÑÎ°úÍ∑∏Îû®', 2),
('education', 'ÍµêÏú°', 'ÌïôÏäµÍ≥º ÏÑ±Ïû•ÏùÑ ÏúÑÌïú ÍµêÏú° ÌîÑÎ°úÍ∑∏Îû®', 3),
('family', 'Í∞ÄÏ°±', 'Í∞ÄÏ°±Í≥º Ìï®ÍªòÌïòÎäî ÌäπÎ≥ÑÌïú ÌîÑÎ°úÍ∑∏Îû®', 4),
('health', 'Í±¥Í∞ï', 'Í±¥Í∞ïÌïú ÏÇ∂ÏùÑ ÏúÑÌïú Ïõ∞ÎãàÏä§ ÌîÑÎ°úÍ∑∏Îû®', 5)
ON CONFLICT (category_code) DO NOTHING;

-- Í≥µÍ∞Ñ Ï†ïÎ≥¥
INSERT INTO spaces (space_code, space_name, space_type, subtitle, capacity_min, capacity_max, base_price, display_order) VALUES
('room1', 'Î∞© 1', 'bedroom', 'ÏïÑÎäëÌïú Ìú¥Ïãù Í≥µÍ∞Ñ', 1, 3, 150000, 1),
('room2', 'Î∞© 2', 'bedroom', 'Ìé∏ÏïàÌïú Ìú¥Ïãù Í≥µÍ∞Ñ', 1, 3, 150000, 2),
('living', 'Í±∞Ïã§', 'living', 'Ìé∏ÏïàÌïú Ìú¥ÏãùÍ≥º ÎåÄÌôîÏùò Í≥µÍ∞Ñ', 1, 15, 0, 3),
('kitchen', 'Î∂ÄÏóå', 'kitchen', 'ÏöîÎ¶¨ÏôÄ ÏãùÏÇ¨Î•º ÏúÑÌïú Í≥µÍ∞Ñ', 1, 15, 0, 4)
ON CONFLICT (space_code) DO NOTHING;

-- Î∂ÄÍ∞Ä ÏÑúÎπÑÏä§
INSERT INTO additional_services (service_code, service_name, service_category, unit_name, unit_price, description, price_per_set, set_size, display_order) VALUES
('bbq_grill', 'BBQ Í∑∏Î¶¥ ÎåÄÏó¨', 'bbq', 'Í∞ú', 30000, 'Î∞îÎ≤†ÌÅê Í∑∏Î¶¥ 1Í∞úÎãπ 30,000Ïõê', 30000, 1, 1),
('meat_set', 'Í≥†Í∏∞Îßå ÏÑ∏Ìä∏', 'bbq', 'ÏÑ∏Ìä∏', 50000, '5Ïù∏ Í∏∞Ï§Ä Í≥†Í∏∞Îßå ÏÑ∏Ìä∏', 50000, 5, 2),
('full_bbq_set', 'Í≥†Í∏∞+ÏãùÏÇ¨ ÏÑ∏Ìä∏', 'bbq', 'ÏÑ∏Ìä∏', 70000, '5Ïù∏ Í∏∞Ï§Ä Í≥†Í∏∞+ÏãùÏÇ¨ ÌíÄÏÑ∏Ìä∏', 70000, 5, 3),
('breakfast_set', 'Î≥¥Î¶¨Î∞• Ï†ïÏãù', 'meal', 'ÏÑ∏Ìä∏', 50000, '5Ïù∏ Í∏∞Ï§Ä Î≥¥Î¶¨Î∞• Ï†ïÏãù', 50000, 5, 4),
('bus_charter', 'Î≤ÑÏä§ ÎåÄÏ†à', 'transport', 'Ìöå', 100000, 'Î≤ÑÏä§ ÎåÄÏ†à ÏÑúÎπÑÏä§', 100000, 1, 5),
('woodwork_experience', 'Î™©Í≥µ Ï≤¥Ìóò', 'experience', 'Î™Ö', 30000, 'Î™©Í≥µ Ï≤¥Ìóò ÌîÑÎ°úÍ∑∏Îû® 1Ïù∏Îãπ', 30000, 1, 6)
ON CONFLICT (service_code) DO NOTHING;

-- FAQ Í∏∞Î≥∏ Îç∞Ïù¥ÌÑ∞
INSERT INTO faqs (category, question, answer, is_featured, display_order) VALUES
('reservation', 'Ï≤¥ÌÅ¨Ïù∏/Ï≤¥ÌÅ¨ÏïÑÏõÉ ÏãúÍ∞ÑÏùÄ Ïñ∏Ï†úÏù∏Í∞ÄÏöî?', 'Ï≤¥ÌÅ¨Ïù∏ÏùÄ Ïò§ÌõÑ 3ÏãúÎ∂ÄÌÑ∞, Ï≤¥ÌÅ¨ÏïÑÏõÉÏùÄ Ïò§Ï†Ñ 11ÏãúÍπåÏßÄÏûÖÎãàÎã§.', true, 1),
('reservation', 'ÏòàÏïΩ Ï∑®ÏÜåÎäî Ïñ∏Ï†úÍπåÏßÄ Í∞ÄÎä•ÌïúÍ∞ÄÏöî?', 'Ï≤¥ÌÅ¨Ïù∏ 14Ïùº Ï†ÑÍπåÏßÄ 100% ÌôòÎ∂àÏù¥ Í∞ÄÎä•Ìï©ÎãàÎã§!', true, 2),
('program', 'ÌîÑÎ°úÍ∑∏Îû®ÏùÄ Ïñ¥ÎñªÍ≤å Ïã†Ï≤≠ÌïòÎÇòÏöî?', 'ÏòàÏïΩ Ïãú ÏõêÌïòÏãúÎäî ÌîÑÎ°úÍ∑∏Îû®ÏùÑ ÏÑ†ÌÉùÌïòÏã§ Ïàò ÏûàÏäµÎãàÎã§!', true, 3),
('facility', 'Ï£ºÏ∞®Îäî Í∞ÄÎä•ÌïúÍ∞ÄÏöî?', 'ÎÑ§, Î¨¥Î£å Ï£ºÏ∞®Í∞Ä Í∞ÄÎä•Ìï©ÎãàÎã§. Ï£ºÏ∞®Îäî 100mÏúÑÏóê ÌååÎûÄ Ï∞ΩÍ≥† ÏïûÏ™ΩÏóê ÎÑìÏùÄ Í≥µÌÑ∞ÏóêÎèÑ Ï£ºÏ∞®Í∞ÄÎä•Ìï©ÎãàÎã§.', true, 4);

-- ÏÇ¨Ïù¥Ìä∏ ÏÑ§Ï†ï
INSERT INTO site_settings (setting_key, setting_value, setting_type, display_name, category) VALUES
('site_name', 'Îã¨ÌåΩÏù¥ ÏïÑÏßÄÌä∏ ÌéúÏÖò', 'string', 'ÏÇ¨Ïù¥Ìä∏Î™Ö', 'general'),
('max_booking_days', '365', 'number', 'ÏµúÎåÄ ÏòàÏïΩ Í∞ÄÎä• ÏùºÏàò', 'booking'),
('min_booking_days', '1', 'number', 'ÏµúÏÜå ÏòàÏïΩ ÏùºÏàò', 'booking'),
('default_language', 'ko', 'string', 'Í∏∞Î≥∏ Ïñ∏Ïñ¥', 'general'),
('enable_notifications', 'true', 'boolean', 'ÏïåÎ¶º ÌôúÏÑ±Ìôî', 'notification')
ON CONFLICT (setting_key) DO NOTHING;

-- ÏïåÎ¶º ÌÖúÌîåÎ¶ø
INSERT INTO notification_templates (template_code, template_name, channel, subject, message_template, trigger_event) VALUES
('reservation_confirmed', 'ÏòàÏïΩ ÌôïÏ†ï ÏïåÎ¶º', 'sms', 'ÏòàÏïΩ ÌôïÏ†ï', '[Îã¨ÌåΩÏù¥ ÏïÑÏßÄÌä∏] ÏòàÏïΩÏù¥ ÌôïÏ†ïÎêòÏóàÏäµÎãàÎã§. ÏòàÏïΩÎ≤àÌò∏: {{reservation_number}}', 'reservation_confirmed'),
('payment_completed', 'Í≤∞Ï†ú ÏôÑÎ£å ÏïåÎ¶º', 'sms', 'Í≤∞Ï†ú ÏôÑÎ£å', '[Îã¨ÌåΩÏù¥ ÏïÑÏßÄÌä∏] Í≤∞Ï†úÍ∞Ä ÏôÑÎ£åÎêòÏóàÏäµÎãàÎã§. Í∏àÏï°: {{amount}}Ïõê', 'payment_completed'),
('checkin_reminder', 'Ï≤¥ÌÅ¨Ïù∏ ÏïàÎÇ¥', 'sms', 'Ï≤¥ÌÅ¨Ïù∏ ÏïàÎÇ¥', '[Îã¨ÌåΩÏù¥ ÏïÑÏßÄÌä∏] ÎÇ¥ÏùºÏù¥ Ï≤¥ÌÅ¨Ïù∏ ÎÇ†ÏûÖÎãàÎã§. Ï≤¥ÌÅ¨Ïù∏ ÏãúÍ∞Ñ: 15:00', 'checkin_reminder')
ON CONFLICT (template_code) DO NOTHING;

-- =============================================
-- 7. ÏôÑÎ£å ÌôïÏù∏
-- =============================================

-- ÌÖåÏù¥Î∏î ÏÉùÏÑ± ÌôïÏù∏
SELECT 
  'üéâ DDL Ïã§Ìñâ ÏôÑÎ£å: ' || COUNT(*) || 'Í∞ú ÌÖåÏù¥Î∏î ÏÉùÏÑ±Îê®' as result
FROM information_schema.tables 
WHERE table_schema = 'public' 
AND table_name IN (
  'customers', 'reservations', 'programs', 'program_categories', 
  'spaces', 'additional_services', 'reservation_services',
  'payments', 'coupons', 'coupon_usages', 'reviews', 'faqs', 
  'stories', 'notifications', 'notification_templates',
  'customer_activities', 'system_logs', 'site_settings', 'admin_users'
);

-- Í∏∞Î≥∏ Îç∞Ïù¥ÌÑ∞ ÌôïÏù∏
SELECT 
  '‚úÖ Í∏∞Î≥∏ Îç∞Ïù¥ÌÑ∞ ÏÇΩÏûÖ ÏôÑÎ£å' as message,
  'Categories: ' || (SELECT COUNT(*) FROM program_categories) || ', ' ||
  'Spaces: ' || (SELECT COUNT(*) FROM spaces) || ', ' ||
  'Services: ' || (SELECT COUNT(*) FROM additional_services) || ', ' ||
  'FAQs: ' || (SELECT COUNT(*) FROM faqs) as counts; 